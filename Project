#include <iostream>
#include <string>
#include <fstream>
#include <vector>
#include <sstream>

using namespace std;

std::vector<vector<string> > A;  //Vector collection of lines of data from B
std::vector<string> B;		 //Vector with specific data like first name, last name

//Input All User's Data into the File (not the vector)
void input()
{
	ofstream myfile("Spreadsheet.txt", std::ios_base::app);
	if(myfile.is_open())
	{
		//Add breaks between lines of data
		myfile << '\n';

		//Temp Variables
		string firstName, lastName, email_ID, phoneNumber, street, city, state,
		vehicleType, vehicleModel, vehicleColor, aptNum, zipcode, vehicleTagNum;

		//Enter Variables into file
		cout << "Enter first name: " << endl;    
		cin >> firstName;  
		myfile << firstName << " ";

		cout<< "Enter last name: " << endl;
		cin >> lastName;
		myfile << lastName << " ";

		cout << "Enter email: " << endl;
		cin >> email_ID;
		myfile << email_ID << " ";

		cout << "Enter phone number (XXX-XXX-XXXX): " << endl;
		cin >> phoneNumber;
		myfile << phoneNumber << " ";

		cout << "Enter apartment number: " << endl;
		cin >> aptNum;
		myfile << aptNum << " ";

		cout << "Enter street address: " << endl;
		cin >> street;
		myfile << street << " ";

		cout << "Enter state (XX): " << endl;
		cin >> state;
		myfile << state << " ";

		cout << "Enter city: " << endl;
		cin >> city;
		myfile << city << " ";

		cout << "Enter zipcode: " << endl;
		cin >> zipcode;
		myfile << zipcode << " ";

		cout << "Enter vehicle type: " << endl;
		cin >> vehicleType;
		myfile << vehicleType << " ";

		cout << "Enter vehicle model: " << endl;
		cin >> vehicleModel;
		myfile << vehicleModel << " ";

		cout << "Enter vehicle color: " << endl;
		cin >> vehicleColor;
		myfile << vehicleColor << " ";

		cout << "Enter vehicle tag number: " << endl;
		cin >> vehicleTagNum;
		myfile << vehicleTagNum << " ";
	}
}

//sets up the 2D vector A
void createVectors()
{
	A.clear();
	B.clear();

	ifstream infile("Spreadsheet.txt");
	if(!infile)
	{
		cerr << "Could not open file." << endl;
		return;
	}

	//A vector of lines from the text file is set up
	vector<string> lines;
	string line;
	while(getline(infile, line))
	{
		lines.push_back(line);
	}
	infile.close();

	//The lines from the lines vector are put into vector B, which vector A is made up of
	for(int i = 0; i < lines.size(); i++)
	{
		B.clear();
		string s = lines[i];

		string temp;
		stringstream ss(s);

		while(ss >> temp)
		{
			B.push_back(temp);
		}
		
		A.push_back(B);
	}

}

//(For testing purposes) Prints all of the data to the screen
void printDataToScreen()
{
	for(int i = 0; i < A.size(); i++)
	{
		for (int j = 0; j < A[i].size(); j++)
		{
			cout << A[i][j] << " ";
		}
		cout << endl;
	}
}

//Search by first name, returns all people with the first name
void searchByFirstName()
{
	cout << endl;
	cout << "What is the first name of who you are searching for?" << endl;

	string userInput;
	cin >> userInput;
	
	//search through the vector for the person
	for(int i = 0; i < A.size(); i++)
	{
		for(int j = 0; j < A[i].size(); j++)
		{
			if (A[i][j] == userInput)
			{
				cout << endl;
				cout << "First Name         : " << A[i][j] << endl;
				cout << "Last Name          : " << A[i][j+1] << endl;
				cout << "Email Address      : " << A[i][j+2] << endl;
				cout << "Phone Number       : " << A[i][j+3] << endl;
				cout << "Apartment Number   : " << A[i][j+4] << endl;
				cout << "Address            : " << A[i][j+5] << endl;
				cout << "State              : " << A[i][j+6] << endl;
				cout << "City               : " << A[i][j+7] << endl;
				cout << "Zipcode            : " << A[i][j+8] << endl;
				cout << "Vehicle Type       : " << A[i][j+9] << endl;
				cout << "Vehicle Model      : " << A[i][j+10] << endl;
				cout << "Vehicle Color      : " << A[i][j+11] << endl;
				cout << "Vehicle Tag Number : " << A[i][j+12] << endl;
				cout << endl;
				cout << "Search Completed." << endl;
				cout << endl;
			}
		}
	}
}

//searches by last name, returns all people with the last name
void searchByLastName()
{
	cout << endl;
	cout << "What is the last name of who you are searching for?" << endl;

	string userInput;
	cin >> userInput;

	//traverse the vector for the person
	for(int i = 0; i < A.size(); i++)
	{
		for(int j = 0; j < A[i].size(); j++)
		{
			if (A[i][j] == userInput)
			{
				cout << endl;
				cout << "First Name         : " << A[i][j-1] << endl;
				cout << "Last Name          : " << A[i][j] << endl;
				cout << "Email Address      : " << A[i][j+1] << endl;
				cout << "Phone Number       : " << A[i][j+2] << endl;
				cout << "Apartment Number   : " << A[i][j+3] << endl;
				cout << "Address            : " << A[i][j+4] << endl;
				cout << "State              : " << A[i][j+5] << endl;
				cout << "City               : " << A[i][j+6] << endl;
				cout << "Zipcode            : " << A[i][j+7] << endl;
				cout << "Vehicle Type       : " << A[i][j+8] << endl;
				cout << "Vehicle Model      : " << A[i][j+9] << endl;
				cout << "Vehicle Color      : " << A[i][j+10] << endl;
				cout << "Vehicle Tag Number : " << A[i][j+11] << endl;
				cout << endl;
				cout << "Search Completed." << endl;
				cout << endl;
			}
		}
	}
}

//SEARCH MENU controls all searching functions
void searchMenu()
{
	int pick;

	do
	{
		cout << endl;
		cout << " --- SEARCH MENU --- " << endl;
		cout << endl;
		cout << "1.  Search by first name" << endl;
		cout << "2.  Search by last name" << endl;
		cout << "3.  Quit search" << endl;
		cout << endl;

		cin >> pick;

		switch(pick)
		{
			case 1:
				searchByFirstName();
				break;
			case 2:
				searchByLastName();
				break;
			case 3:
				break;
			default:
				cout << "Not a choice..." << endl;
				break;
		} 
	} while (pick != 3);
}

bool checkPassword() {
	
	string password="csc230";
	string Input; 

	while (Input != password){
		cout << "To access employee details, please enter the password: ";
		cin >> Input;

		cout << "I'm sorry, but the password you entered is incorrect. \n";
		cout << "Please try again." << endl;
		return false;
	}
 
	if(Input.compare(password) != 1) {
		cout << "Access is granted. \n";
		return true;
	}
}

void splitPhone(string c) //to split phone# and convert
{
	//changes any dashes to a space
	for(int i = 0; i < c.length(); i ++)	
	{
		
		if(c[i] == '-')						
		{									
			c[i] = ' ';						
		}
	}
	
	
	vector<string> s2; 
	stringstream tt(c); 
	string temp2; 
	
	//gets rid of white spaces and puts #s from string to vector<string> "s2"
	while(tt >> temp2) 
	{
		s2.push_back(temp2); 
	}
	
	
	
	string combinePhone = ""+s2[0]+s2[1]+s2[2]; //puts the phone # back together w/o dashes
	
	long finalPhone = strtol(combinePhone.c_str(), NULL, 0); //converts string "combinePhone" to a long
	
	cout << finalPhone; //prints the converted phone#
}

int main()
{
	int choice;
	cout << "Enter the number of the choice you want: " << endl;
	cout << "1. Log in as user." << endl;
	cout << "2. Log in as admin." << endl;
	
	cin >> choice;
	
	if(choice == 2)
	{
		checkPassword();
	}
		
	//MAIN MENU for User, ((NOT ADMIN!))
	do
	{
		createVectors();
		

		cout << endl;
		cout << " --- MAIN MENU --- " << endl;
		cout << endl;
		cout << "1.  Input new record." << endl;
		cout << "2.  Search for record." << endl;
		cout << "3.  Print records on screen." << endl;
		cout << "4.  Quit Program." << endl;
		cout << endl;

		cin >> choice;

		switch(choice)
		{
			case 1:
				input();
				break;
			case 2:
				searchMenu();
				break;
			case 3:
				printDataToScreen();
				break;
			case 4:
				cout << "...Ending Program..." << endl;
				break;
			default:
				cout << "Not a choice..." << endl;
				break;
		}
	} while (choice != 4);
	
  return 0;
}
